{"version":3,"sources":["first_logo.png","Logo.js","DisplayButton.js","Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","src","require","style","height","alt","DisplayButton","state","graph","table","styleLabel","fontSize","color","margin","handleChange","bind","event","target","name","value","type","checked","this","setState","className","id","onChange","Component","Search","searchValue","end_date","Date","start_date","steps","distance","weather","calories","sleeping_hours","light_sleep","arrSteps","handleSubmit","preventDefault","fetch","then","response","json","aSteps","data","onSubmit","placeholder","textAlign","max","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0KAAAA,EAAOC,QAAU,IAA0B,wC,wHCY5BC,MAVf,WAKI,OACI,yBAAKC,IAAKC,EAAQ,IAAqBC,MAL7B,CACVC,OAAQ,UAI6CC,IAAI,U,iDCoDlDC,G,wBAvDX,aAAe,IAAD,8BACV,+CACKC,MAAQ,CACTC,OAAO,EACPC,OAAQ,GAEZ,EAAKC,WAAa,CACdC,SAAU,aACVC,MAAO,QACPC,OAAQ,2BAEZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAXV,E,0EAcDC,GAAQ,IAAD,EACqBA,EAAMC,OAApCC,EADS,EACTA,KAAMC,EADG,EACHA,MAAOC,EADJ,EACIA,KAAMC,EADV,EACUA,QACjB,aAATD,EAAsBE,KAAKC,SAAL,aAAef,OAAO,EAAOC,OAAM,GAAQS,EAAOG,IAAaC,KAAKC,SAAL,eAAiBL,EAAOC,M,+BAI7G,OACI,yBAAKK,UAAU,WACX,yBAAKA,UAAU,cAAcC,GAAG,WAC5B,+BACI,2BACIL,KAAK,WACLD,MAAM,IACND,KAAK,QACLG,QAASC,KAAKf,MAAMC,MACpBkB,SAAUJ,KAAKR,eAEnB,wGAKR,yBAAKU,UAAU,cAAcC,GAAG,UAC5B,+BACI,2BACIL,KAAK,WACLD,MAAM,IACND,KAAK,QACLG,QAASC,KAAKf,MAAME,MACpBiB,SAAUJ,KAAKR,eAEnB,mH,GA9CIa,cCuKbC,E,YAtKX,aAAe,IAAD,8BACV,+CACKrB,MAAQ,CACTsB,YAAa,GACbC,SAAU,IAAIC,KACdC,WAAY,IAAID,KAChBE,OAAO,EACPC,UAAW,EACXC,SAAS,EACTC,UAAU,EACVC,gBAAgB,EAChBC,aAAa,EACbC,SAAU,IAEd,EAAK7B,WAAa,CACdC,SAAU,aACVC,MAAO,QACPC,OAAQ,2BAEZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKyB,aAAe,EAAKA,aAAazB,KAAlB,gBApBV,E,0EAuBDC,GAAQ,IAAD,EACqBA,EAAMC,OAApCC,EADS,EACTA,KAAMC,EADG,EACHA,MAAOC,EADJ,EACIA,KAAMC,EADV,EACUA,QACjB,aAATD,EAAsBE,KAAKC,SAAL,eAAiBL,EAAOG,IAAaC,KAAKC,SAAL,eAAiBL,EAAOC,M,mCAG1EH,GAAQ,IAAD,OAChBA,EAAMyB,iBACNC,MAAM,0CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAa,IACRE,EAAUF,EAASG,KAAnBD,OACP,EAAKvB,SAAS,CAAEgB,SAAUO,S,+BAKlC,OACI,6BACI,0BAAME,SAAU1B,KAAKkB,cACjB,6BACI,sDAGA,2BACIpB,KAAK,OACLF,KAAK,cACLC,MAAOG,KAAKf,MAAMsB,YAClBoB,YAAY,oDACZ9C,MAAO,CAAC+C,UAAU,SAClBxB,SAAUJ,KAAKR,eAEnB,2BAAOX,MAAOmB,KAAKZ,YAAnB,uDAIJ,yBAAKc,UAAU,SACX,yBAAKA,UAAU,QACX,2BACIJ,KAAK,OACLF,KAAK,aACLC,MAAOG,KAAKf,MAAMyB,WAClBN,SAAUJ,KAAKR,aACfqC,IAAI,eAER,2BAAOhD,MAAOmB,KAAKZ,YAAnB,iBAIJ,yBAAKc,UAAU,QACX,2BACIJ,KAAK,OACLF,KAAK,WACLC,MAAOG,KAAKf,MAAMuB,SAClBJ,SAAUJ,KAAKR,aACfqC,IAAI,eAER,2BAAOhD,MAAOmB,KAAKZ,YAAnB,0EAKR,6BACA,yBAAKc,UAAU,OACX,yBAAKA,UAAU,UACX,2BAAOrB,MAAOmB,KAAKZ,YAAnB,iCAEI,2BACIU,KAAK,WACLF,KAAK,QACLG,QAASC,KAAKf,MAAM0B,MACpBP,SAAUJ,KAAKR,iBAI3B,yBAAKU,UAAU,UACX,2BAAOrB,MAAOmB,KAAKZ,YAAnB,2BAEI,2BACIU,KAAK,WACLF,KAAK,WACLG,QAASC,KAAKf,MAAM2B,SACpBR,SAAUJ,KAAKR,iBAI3B,yBAAKU,UAAU,UACX,2BAAOrB,MAAOmB,KAAKZ,YAAnB,0DAEI,2BACIU,KAAK,WACLF,KAAK,UACLG,QAASC,KAAKf,MAAM4B,QACpBT,SAAUJ,KAAKR,iBAI3B,yBAAKU,UAAU,UACX,2BAAOrB,MAAOmB,KAAKZ,YAAnB,6CAEI,2BACIU,KAAK,WACLF,KAAK,WACLG,QAASC,KAAKf,MAAM6B,SACpBV,SAAUJ,KAAKR,iBAI3B,yBAAKU,UAAU,UACX,2BAAOrB,MAAOmB,KAAKZ,YAAnB,oDAEI,2BACIU,KAAK,WACLF,KAAK,iBACLG,QAASC,KAAKf,MAAM8B,eACpBX,SAAUJ,KAAKR,iBAI3B,yBAAKU,UAAU,UACX,2BAAOrB,MAAOmB,KAAKZ,YAAnB,8CAEI,2BACIU,KAAK,WACLF,KAAK,cACLG,QAASC,KAAKf,MAAM+B,YACpBZ,SAAUJ,KAAKR,iBAK3B,2BAAOX,MAAOmB,KAAKZ,YAAnB,uDAMR,6BACA,kBAAC,EAAD,W,GAjKKiB,aCkBNyB,MAbf,WACE,OACE,yBAAK5B,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,gCCHY6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrB,MAAK,SAAAsB,GACjCA,EAAaC,kB","file":"static/js/main.372d4cc0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/first_logo.4c4417d4.png\";","import React from \"react\"\r\n\r\nfunction Logo(){\r\n    const style = {\r\n        height: \"25vmin\"\r\n    }\r\n\r\n    return (\r\n        <img src={require(\"./first_logo.png\")} style={style} alt=\"logo\" />\r\n    )\r\n}\r\n\r\nexport default Logo","import React, {Component} from \"react\"\r\nimport \"./DisplayButton.css\"\r\n\r\n\r\nclass DisplayButton extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            graph: false,\r\n            table : false\r\n        }\r\n        this.styleLabel = {\r\n            fontSize: \"calc(10px)\",\r\n            color: \"black\",\r\n            margin: \"2vmin 2vmin 2vmin 2vmin\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? this.setState({graph: false, table:false, [name]: checked }) : this.setState({ [name]: value })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"display\">\r\n                <div className=\"checkButton\" id=\"cbRight\">\r\n                    <label>\r\n                        <input \r\n                            type=\"checkbox\" \r\n                            value=\"1\"\r\n                            name=\"graph\"\r\n                            checked={this.state.graph}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <span>\r\n                            הצג מידע גרפי\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"checkButton\" id=\"cbLeft\">\r\n                    <label>\r\n                        <input \r\n                            type=\"checkbox\" \r\n                            value=\"1\"\r\n                            name=\"table\"\r\n                            checked={this.state.table}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <span>\r\n                            הצג מידע טבלאי\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DisplayButton","import React, {Component} from \"react\"\r\nimport \"./search.css\"\r\nimport DisplayButton from './DisplayButton';\r\n\r\nclass Search extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            searchValue: \"\",\r\n            end_date: new Date(),\r\n            start_date: new Date(),\r\n            steps: false,\r\n            distance : false,\r\n            weather: false,\r\n            calories: false,\r\n            sleeping_hours: false,\r\n            light_sleep: false,\r\n            arrSteps: []\r\n        }\r\n        this.styleLabel = {\r\n            fontSize: \"calc(10px)\",\r\n            color: \"black\",\r\n            margin: \"2vmin 2vmin 2vmin 2vmin\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch(\"http://localhost:3000/metrics/getSteps\")\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const {aSteps} = response.data\r\n                this.setState({ arrSteps: aSteps })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div>\r\n                        <button>\r\n                            חפש\r\n                        </button>\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"searchValue\"\r\n                            value={this.state.searchValue} \r\n                            placeholder=\"שם המטופל\" \r\n                            style={{textAlign:\"right\"}} \r\n                            onChange={this.handleChange} \r\n                        />\r\n                        <label style={this.styleLabel}>\r\n                                :חפש מטופל\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"dates\">\r\n                        <div className=\"date\">\r\n                            <input \r\n                                type=\"date\"\r\n                                name=\"start_date\"\r\n                                value={this.state.start_date} \r\n                                onChange={this.handleChange}\r\n                                max=\"2020-01-09\"\r\n                            />\r\n                            <label style={this.styleLabel}>\r\n                                עד\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"date\">\r\n                            <input \r\n                                type=\"date\"\r\n                                name=\"end_date\"\r\n                                value={this.state.end_date} \r\n                                onChange={this.handleChange}\r\n                                max=\"2020-01-09\"\r\n                            />\r\n                            <label style={this.styleLabel}>\r\n                                בחר תאריכים מ\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"mdd\">\r\n                        <div className=\"matrix\">\r\n                            <label style={this.styleLabel}>\r\n                                צעדים\r\n                                <input \r\n                                    type=\"checkbox\" \r\n                                    name=\"steps\"\r\n                                    checked={this.state.steps}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"matrix\">\r\n                            <label style={this.styleLabel}>\r\n                                מרחק\r\n                                <input \r\n                                    type=\"checkbox\" \r\n                                    name=\"distance\"\r\n                                    checked={this.state.distance}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"matrix\">\r\n                            <label style={this.styleLabel}>\r\n                                מזג האוויר\r\n                                <input \r\n                                    type=\"checkbox\" \r\n                                    name=\"weather\"\r\n                                    checked={this.state.weather}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"matrix\">\r\n                            <label style={this.styleLabel}>\r\n                                קלוריות\r\n                                <input \r\n                                    type=\"checkbox\" \r\n                                    name=\"calories\"\r\n                                    checked={this.state.calories}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"matrix\">\r\n                            <label style={this.styleLabel}>\r\n                                שעות שינה\r\n                                <input \r\n                                    type=\"checkbox\" \r\n                                    name=\"sleeping_hours\"\r\n                                    checked={this.state.sleeping_hours}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"matrix\">\r\n                            <label style={this.styleLabel}>\r\n                                שינה קלה\r\n                                <input \r\n                                    type=\"checkbox\" \r\n                                    name=\"light_sleep\"\r\n                                    checked={this.state.light_sleep}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                            \r\n                        </div>\r\n                        <label style={this.styleLabel}>\r\n                                בחר מדדים\r\n                        </label>\r\n                    </div>\r\n\r\n                </form>\r\n                <br />\r\n                <DisplayButton />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search\r\n","import React from 'react';\nimport './App.css';\nimport \"./Logo\";\nimport \"./Search\"\n\nimport Logo from './Logo';\nimport Search from './Search';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Logo />\n        <Search />\n        <br />\n      </header>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}